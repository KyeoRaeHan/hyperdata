# Default values for hyperdata-system.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: poiu2389/max
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "2.1.1"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
# fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
# runAsUser: 1000

service:
  type: NodePort
  port: 8100

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
  # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
#   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

## added setting
applicationProperties: "application.yml"

server:
  port: 8100
  servlet:
    contextPath: /hyperdata
logging:
  config: classpath:logback-production.xml
spring:
  servlet:
    multipart:
      maxFileSize: 1TB
      maxRequestSize: 1TB
  datasource:
    username: hyperdata
    password: tmax
    url: jdbc:tibero:thin:@192.1.3.180:8629:tibero
    driverClassName: com.tmax.tibero.jdbc.TbDriver
    hikari:
      jdbcUrl: jdbc:tibero:thin:@192.1.3.180:8629:tibero
      driverClassName: com.tmax.tibero.jdbc.TbDriver
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest
  mail:
    host: 127.0.0.1
    port: 587
    properties:
      mail:
        debug: true
        smtp:
          connectionTimeout: 5000
          auth: false
          starttls:
            enable: false
          ssl:
            enable: false
    username: oper13357799@gmail.com
    password: ldwkgiunmfzigfvl
  mvc:
    logRequestDetails: true
    logResolvedException: true

  jpa:
    hibernate:
      ddlAuto: create
      naming:
        physicalStrategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
        implicitStrategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
    showSql: true
    properties:
      hibernate:
        formatSql: true
    databasePlatform: org.hibernate.dialect.Oracle10gDialect
##### Web Server Config ########################################
ws:
  default: /home/systemmanagement/
  profiles: /home/systemmanagement/profile/
### TIBERO
tibero:
  ip: localhost
  port: 8629
  username: hyperdata
  password: tmax
  sid: tibero
###Kubernetes
kubernetes:
  config:
    type: kubernetes

### keycloak ################
keycloak:
  enabled: true
  realm: HyperDataRealm
  authServerUrl: http://192.1.3.180:8888/
  sslRequired: none
  resource: HyperDataLogin
  credentials:
    secret: KdfYES8btQcYpJNsFQ5Q02rFP3vqQW89
  useResourceRoleMappings: true
  bearerOnly: true
### keycloak end ################

##ozone##
ozone:
  config:
    host: 192.1.3.180
    port: 9862